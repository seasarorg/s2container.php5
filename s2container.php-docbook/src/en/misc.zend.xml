<sect1 id="misc.zend"><title>Using S2Container with Zend_Controller</title>
    <sect2><title>Environment</title>
        <itemizedlist>
            <listitem>PHP-5.3.2</listitem>
            <listitem>Zend Framework v1.10.2</listitem>
            <listitem>s2container.php-2.0.3</listitem>
        </itemizedlist>
    </sect2>

    <sbr/>
    <sect2><title>Creation of the project</title>
        <para>
          Let's make the project directory by using Zend_Tool_Framework.
          Afterwards, the setting to use s2container.php is added. 
          In the following SVN repository, there is a project directory made this time. 
        </para>

        <itemizedlist>
            <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/">https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/</ulink></listitem>
        </itemizedlist>
    </sect2>

  <sbr/>
  <sect2><title>Setup of S2Container</title>
    <para>
      Let's add the setting to use s2container.php for the project made with Zend_Tool_Framework.
    </para>

       <blockquote><formalpara><title>Preparing the s2.php</title><sbr/></formalpara>
            <para>
            Create the s2.php which is a setting file of s2container.php in the application/configs directory. 
            </para>
            <itemizedlist>
                <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/application/configs/s2.php">application/configs/s2.php</ulink></listitem>
            </itemizedlist>
       </blockquote>

       <sbr/>
       <blockquote><formalpara><title>Creation of S2ActionHelper</title><sbr/></formalpara>
            <para>
               Make the action helper which accesses S2Container in the action method.
            </para>
            <itemizedlist>
                <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/library/Seasar/Zf/Controller/S2ActionHelper.php">library/Seasar/Zf/Controller/S2ActionHelper.php</ulink></listitem>
            </itemizedlist>
       </blockquote>

       <sbr/>
       <blockquote><formalpara><title>Edit of Bootstrap.php</title><sbr/></formalpara>
            <para>
              Set the use of S2ActionHelper with Bootstrap of the application.(_initActionHelper method)
            </para>
            <itemizedlist>
                <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/application/Bootstrap.php">application/Bootstrap.php</ulink></listitem>
            </itemizedlist>
       </blockquote>

       <sbr/>
       <blockquote><formalpara><title>Creation of var directory</title><sbr/></formalpara>
            <para>
              Make the var directory to save the log file, the session file, and cash, etc.
            </para>
            <itemizedlist>
                <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/var/">var/</ulink></listitem>
            </itemizedlist>
       </blockquote>
  </sect2>

  <sbr/>
  <sect2 id="misc.zend.action"><title>Using S2Container in the Action method</title>
    <para>
        When using  the component of S2Container in the action method, you can touch it by the S2ActionHelper.
    </para>
      <itemizedlist>
        <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/application/controllers/IndexController.php">application/controllers/IndexController.php</ulink></listitem>
      </itemizedlist>
<programlisting continuation="restart" linenumbering="unnumbered"><![CDATA[
    public function addAction()
    {
        $this->_helper->viewRenderer->setNoRender();
        echo $this->_helper->s2('Service_Calc')->add(1, 2);
    }
]]></programlisting>
    <para>
        Let's create the <ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/application/services/Calc.php">Service_Calc class</ulink> int the application/services directory.
        The access from in the method of the action to S2Container can be accessed by way of the property of S2ActionHelper. The name specified for a property becomes a component name. 
    </para>

      <itemizedlist>
        <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/application/controllers/IndexController.php">application/controllers/IndexController.php</ulink></listitem>
      </itemizedlist>
<programlisting continuation="restart" linenumbering="unnumbered"><![CDATA[
    public function add2Action()
    {
        $this->_helper->viewRenderer->setNoRender();
        echo $this->_helper->s2->calc->add(1, 2);
    }
]]></programlisting>

    <para>
    For the above-mentioned, the component of the name "calc" is taken out from S2Container.
    However, when the component is taken from S2Container by the component name, it is necessary to register the component in S2Container in advance. 
    S2ActionHelper can read the configuration file to construct S2Container in each action.
    The configuration file is located in "module/dicons/controller/action.php"
    The following file becomes the configuration file of the cdList2 action for the above-mentioned.
    </para>

    <itemizedlist>
        <listitem><ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/application/dicons/index/add2.php">application/dicons/index/add2.php</ulink></listitem>
    </itemizedlist>
  </sect2>

  <sbr/>
  <sect2><title>UnitTest of The Component</title>
    <para>
      Let's create the UnitTest in the tests direcotry.
      The bootstrap method of Zend_Application is executed with <ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/tests/application/bootstrap.php">tests/application/bootstrap.php</ulink>, and the applications environment is constructed.
      Create UnitTest of the Service_Calc class in the <ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/tests/application/services/">tests/application/services directory</ulink> as <ulink url="https://www.seasar.org/svn/s2container.php5/trunk/s2zf1102/tests/application/services/CalcTest.php">CalcTest.php</ulink>. 
      In the Service_CalcTest class, the service component to be tested is acquired from S2Contaienrã€€in the setUp method 
    </para>

<programlisting continuation="restart" linenumbering="unnumbered"><![CDATA[
class Service_CalcTest extends PHPUnit_Framework_TestCase {

    public function testAdd() {
        $this->assertEquals(3, $this->service->add(1, 2));
    }

    public function setUp() {
        s2init();
        $this->service = s2get('Service_Calc');
    }

    public function tearDown() {
        $this->service = null;
    }
}

]]></programlisting>

    <para>
    The execution result of UnitTest is as follows.
    </para>

<programlisting continuation="restart" linenumbering="unnumbered"><![CDATA[
% cd tests
% cat phpunit.xml
<phpunit bootstrap="application/bootstrap.php"/>
% phpunit application/services/CalcTest.php
PHPUnit 3.4.2 by Sebastian Bergmann.

.

Time: 0 seconds

OK (1 test, 1 assertion)
%
]]></programlisting>

  </sect2>
</sect1>

